/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SetupRouteImport } from './routes/setup'
import { Route as GameRouteImport } from './routes/game'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SetupIndexRouteImport } from './routes/setup.index'
import { Route as SetupPlayerCountRouteImport } from './routes/setup.$playerCount'
import { Route as SetupPlayerCountIndexRouteImport } from './routes/setup.$playerCount.index'
import { Route as SetupPlayerCountPlayerNamesRouteImport } from './routes/setup.$playerCount.$playerNames'
import { Route as SetupPlayerCountPlayerNamesDealerRouteImport } from './routes/setup.$playerCount.$playerNames.$dealer'

const SetupRoute = SetupRouteImport.update({
  id: '/setup',
  path: '/setup',
  getParentRoute: () => rootRouteImport,
} as any)
const GameRoute = GameRouteImport.update({
  id: '/game',
  path: '/game',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SetupIndexRoute = SetupIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SetupRoute,
} as any)
const SetupPlayerCountRoute = SetupPlayerCountRouteImport.update({
  id: '/$playerCount',
  path: '/$playerCount',
  getParentRoute: () => SetupRoute,
} as any)
const SetupPlayerCountIndexRoute = SetupPlayerCountIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SetupPlayerCountRoute,
} as any)
const SetupPlayerCountPlayerNamesRoute =
  SetupPlayerCountPlayerNamesRouteImport.update({
    id: '/$playerNames',
    path: '/$playerNames',
    getParentRoute: () => SetupPlayerCountRoute,
  } as any)
const SetupPlayerCountPlayerNamesDealerRoute =
  SetupPlayerCountPlayerNamesDealerRouteImport.update({
    id: '/$dealer',
    path: '/$dealer',
    getParentRoute: () => SetupPlayerCountPlayerNamesRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/game': typeof GameRoute
  '/setup': typeof SetupRouteWithChildren
  '/setup/$playerCount': typeof SetupPlayerCountRouteWithChildren
  '/setup/': typeof SetupIndexRoute
  '/setup/$playerCount/$playerNames': typeof SetupPlayerCountPlayerNamesRouteWithChildren
  '/setup/$playerCount/': typeof SetupPlayerCountIndexRoute
  '/setup/$playerCount/$playerNames/$dealer': typeof SetupPlayerCountPlayerNamesDealerRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/game': typeof GameRoute
  '/setup': typeof SetupIndexRoute
  '/setup/$playerCount/$playerNames': typeof SetupPlayerCountPlayerNamesRouteWithChildren
  '/setup/$playerCount': typeof SetupPlayerCountIndexRoute
  '/setup/$playerCount/$playerNames/$dealer': typeof SetupPlayerCountPlayerNamesDealerRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/game': typeof GameRoute
  '/setup': typeof SetupRouteWithChildren
  '/setup/$playerCount': typeof SetupPlayerCountRouteWithChildren
  '/setup/': typeof SetupIndexRoute
  '/setup/$playerCount/$playerNames': typeof SetupPlayerCountPlayerNamesRouteWithChildren
  '/setup/$playerCount/': typeof SetupPlayerCountIndexRoute
  '/setup/$playerCount/$playerNames/$dealer': typeof SetupPlayerCountPlayerNamesDealerRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/game'
    | '/setup'
    | '/setup/$playerCount'
    | '/setup/'
    | '/setup/$playerCount/$playerNames'
    | '/setup/$playerCount/'
    | '/setup/$playerCount/$playerNames/$dealer'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/game'
    | '/setup'
    | '/setup/$playerCount/$playerNames'
    | '/setup/$playerCount'
    | '/setup/$playerCount/$playerNames/$dealer'
  id:
    | '__root__'
    | '/'
    | '/game'
    | '/setup'
    | '/setup/$playerCount'
    | '/setup/'
    | '/setup/$playerCount/$playerNames'
    | '/setup/$playerCount/'
    | '/setup/$playerCount/$playerNames/$dealer'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  GameRoute: typeof GameRoute
  SetupRoute: typeof SetupRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/setup': {
      id: '/setup'
      path: '/setup'
      fullPath: '/setup'
      preLoaderRoute: typeof SetupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/game': {
      id: '/game'
      path: '/game'
      fullPath: '/game'
      preLoaderRoute: typeof GameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/setup/': {
      id: '/setup/'
      path: '/'
      fullPath: '/setup/'
      preLoaderRoute: typeof SetupIndexRouteImport
      parentRoute: typeof SetupRoute
    }
    '/setup/$playerCount': {
      id: '/setup/$playerCount'
      path: '/$playerCount'
      fullPath: '/setup/$playerCount'
      preLoaderRoute: typeof SetupPlayerCountRouteImport
      parentRoute: typeof SetupRoute
    }
    '/setup/$playerCount/': {
      id: '/setup/$playerCount/'
      path: '/'
      fullPath: '/setup/$playerCount/'
      preLoaderRoute: typeof SetupPlayerCountIndexRouteImport
      parentRoute: typeof SetupPlayerCountRoute
    }
    '/setup/$playerCount/$playerNames': {
      id: '/setup/$playerCount/$playerNames'
      path: '/$playerNames'
      fullPath: '/setup/$playerCount/$playerNames'
      preLoaderRoute: typeof SetupPlayerCountPlayerNamesRouteImport
      parentRoute: typeof SetupPlayerCountRoute
    }
    '/setup/$playerCount/$playerNames/$dealer': {
      id: '/setup/$playerCount/$playerNames/$dealer'
      path: '/$dealer'
      fullPath: '/setup/$playerCount/$playerNames/$dealer'
      preLoaderRoute: typeof SetupPlayerCountPlayerNamesDealerRouteImport
      parentRoute: typeof SetupPlayerCountPlayerNamesRoute
    }
  }
}

interface SetupPlayerCountPlayerNamesRouteChildren {
  SetupPlayerCountPlayerNamesDealerRoute: typeof SetupPlayerCountPlayerNamesDealerRoute
}

const SetupPlayerCountPlayerNamesRouteChildren: SetupPlayerCountPlayerNamesRouteChildren =
  {
    SetupPlayerCountPlayerNamesDealerRoute:
      SetupPlayerCountPlayerNamesDealerRoute,
  }

const SetupPlayerCountPlayerNamesRouteWithChildren =
  SetupPlayerCountPlayerNamesRoute._addFileChildren(
    SetupPlayerCountPlayerNamesRouteChildren,
  )

interface SetupPlayerCountRouteChildren {
  SetupPlayerCountPlayerNamesRoute: typeof SetupPlayerCountPlayerNamesRouteWithChildren
  SetupPlayerCountIndexRoute: typeof SetupPlayerCountIndexRoute
}

const SetupPlayerCountRouteChildren: SetupPlayerCountRouteChildren = {
  SetupPlayerCountPlayerNamesRoute:
    SetupPlayerCountPlayerNamesRouteWithChildren,
  SetupPlayerCountIndexRoute: SetupPlayerCountIndexRoute,
}

const SetupPlayerCountRouteWithChildren =
  SetupPlayerCountRoute._addFileChildren(SetupPlayerCountRouteChildren)

interface SetupRouteChildren {
  SetupPlayerCountRoute: typeof SetupPlayerCountRouteWithChildren
  SetupIndexRoute: typeof SetupIndexRoute
}

const SetupRouteChildren: SetupRouteChildren = {
  SetupPlayerCountRoute: SetupPlayerCountRouteWithChildren,
  SetupIndexRoute: SetupIndexRoute,
}

const SetupRouteWithChildren = SetupRoute._addFileChildren(SetupRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  GameRoute: GameRoute,
  SetupRoute: SetupRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
